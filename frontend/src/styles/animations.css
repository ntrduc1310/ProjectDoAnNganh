/* Task Management Animations and Styles */

/* Fade in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Slide in from left */
@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Slide in from right */
@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Scale in animation */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Pulse animation */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

/* Bounce animation */
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -5px, 0);
  }
  70% {
    transform: translate3d(0, -3px, 0);
  }
  90% {
    transform: translate3d(0, -1px, 0);
  }
}

/* Loading spinner */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Shimmer effect for loading states */
@keyframes shimmer {
  0% {
    background-position: -468px 0;
  }
  100% {
    background-position: 468px 0;
  }
}

/* Task card hover effect */
@keyframes cardHover {
  from {
    transform: translateY(0);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
  }
  to {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
}

/* Drag feedback animation */
@keyframes dragFeedback {
  0% {
    transform: rotate(0deg) scale(1);
  }
  25% {
    transform: rotate(1deg) scale(1.02);
  }
  75% {
    transform: rotate(-1deg) scale(1.02);
  }
  100% {
    transform: rotate(0deg) scale(1);
  }
}

/* Success notification animation */
@keyframes successPulse {
  0% {
    transform: scale(1);
    background-color: #10b981;
  }
  50% {
    transform: scale(1.05);
    background-color: #059669;
  }
  100% {
    transform: scale(1);
    background-color: #10b981;
  }
}

/* Error shake animation */
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-2px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(2px);
  }
}

/* Animation classes */
.animate-fade-in {
  animation: fadeIn 0.3s ease-out;
}

.animate-slide-in-left {
  animation: slideInLeft 0.4s ease-out;
}

.animate-slide-in-right {
  animation: slideInRight 0.4s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.2s ease-out;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-shimmer {
  animation: shimmer 2s infinite linear;
  background: linear-gradient(to right, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%);
  background-size: 800px 104px;
}

.animate-card-hover {
  transition: all 0.2s ease-in-out;
}

.animate-card-hover:hover {
  animation: cardHover 0.2s ease-out forwards;
}

.animate-drag-feedback {
  animation: dragFeedback 0.5s ease-in-out;
}

.animate-success-pulse {
  animation: successPulse 0.6s ease-in-out;
}

.animate-shake {
  animation: shake 0.5s ease-in-out;
}

/* Custom utility classes for task management */
.task-card {
  transition: all 0.2s ease-in-out;
}

.task-card:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.task-card.dragging {
  transform: rotate(5deg);
  opacity: 0.8;
  z-index: 1000;
}

.column-drop-zone {
  transition: background-color 0.2s ease-in-out;
}

.column-drop-zone.drag-over {
  background-color: #e0f2fe;
  border: 2px dashed #0284c7;
}

/* Priority indicators */
.priority-urgent {
  position: relative;
}

.priority-urgent::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, #ef4444, #dc2626);
  border-radius: 4px 4px 0 0;
  animation: pulse 1.5s infinite;
}

.priority-high {
  border-left: 4px solid #f97316;
}

.priority-medium {
  border-left: 4px solid #eab308;
}

.priority-low {
  border-left: 4px solid #22c55e;
}

/* Status indicators */
.status-todo {
  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
}

.status-in-progress {
  background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
}

.status-review {
  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
}

.status-done {
  background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
}

/* Modal backdrop with blur effect */
.modal-backdrop {
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  background: rgba(0, 0, 0, 0.4);
}

.modal-content {
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.95);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Loading states */
.loading-skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

/* Button animations */
.btn-primary {
  transition: all 0.2s ease-in-out;
  transform: translateY(0);
}

.btn-primary:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(59, 130, 246, 0.3);
}

.btn-primary:active {
  transform: translateY(0);
  transition: all 0.1s ease-in-out;
}

/* Form input animations */
.form-input {
  transition: all 0.2s ease-in-out;
}

.form-input:focus {
  transform: scale(1.02);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Notification animations */
.notification-enter {
  opacity: 0;
  transform: translateX(100%);
}

.notification-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: all 0.3s ease-out;
}

.notification-exit {
  opacity: 1;
  transform: translateX(0);
}

.notification-exit-active {
  opacity: 0;
  transform: translateX(100%);
  transition: all 0.3s ease-in;
}

/* Responsive animations */
@media (max-width: 768px) {
  .animate-slide-in-left,
  .animate-slide-in-right {
    animation: fadeIn 0.3s ease-out;
  }
  
  .task-card:hover {
    transform: none;
  }
}

/* Dark mode animations */
.dark .modal-backdrop {
  background: rgba(0, 0, 0, 0.6);
}

.dark .modal-content {
  background: rgba(31, 41, 55, 0.95);
  border: 1px solid rgba(75, 85, 99, 0.3);
}

.dark .loading-skeleton {
  background: linear-gradient(90deg, #374151 25%, #4b5563 50%, #374151 75%);
  background-size: 200% 100%;
}

/* Performance optimizations */
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Focus indicators for accessibility */
.focus-visible {
  outline: 2px solid #2563eb;
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .task-card {
    border: 2px solid;
  }
  
  .priority-urgent::before {
    background: #000;
  }
}
